executor:
  name: python
  options:
    entry: __init__.py
inputs_def:
  - handle: source_file
    description: The original EPUB file to be translated
    json_schema:
      type: string
      ui:widget: file
      ui:options:
        excludeAll: true
        filters:
          - name: EPUB
            extensions:
              - .epub
  - handle: translated_file
    description: The saved path of the translated EPUB file. If not filled in,
      specify an path.
    json_schema:
      type: string
      ui:widget: save
      ui:options:
        excludeAll: true
        filters:
          - name: EPUE
            extensions:
              - .epub
    value:
    nullable: true
  - group: Translate
    collapsed: false
  - handle: language
    description: Translation target language
    json_schema:
      enum:
        - zh-Hans
        - zh-Hant
        - en
        - fr
        - de
        - es
        - ru
        - it
        - pt
        - ja
        - ko
      ui:options:
        labels:
          - Simplified Chinese
          - Traditional Chinese
          - English
          - French
          - German
          - Spanish
          - Russian
          - Italian
          - Portuguese
          - Japanese
          - Korean
    value: zh-Hans
  - handle: write_mode
    json_schema:
      enum:
        - append
        - replace
      ui:options:
        labels:
          - Append
          - Replace
    description: 'How is the translation written into an EPUB file: Is it "append"
      to the original text? Or does it "replace" the original text?'
    value: append
  - handle: prompt
    description: Provide LLM with necessary information for translating books. For
      example, you can fill in the glossary and character name specifications.
      Just tell LLM with natural language description.
    json_schema:
      type: string
      ui:widget: text
    value:
    nullable: true
  - group: LLM
    collapsed: true
  - handle: max_chunk_tokens
    description: The entire book will be split into many chunks and submitted to LLM
      in batches. this number is used to limit the number of tokens in each
      chunk.
    json_schema:
      type: integer
    value: 2048
  - handle: threads
    description: The number of threads opened at the same time to initiate requests
      to LLM, the more threads, the faster the analysis speed.
    json_schema:
      type: integer
      minimum: 1
    value: 4
  - handle: retry_times
    description: The number of retries after an LLM request fails is limited. If a
      request exceeds this number, an error will be reported and the request
      will be exited.
    json_schema:
      type: integer
      minimum: 1
    value: 5
  - handle: retry_interval_seconds
    description: How long (in seconds) after a failed LLM request starts the next retry
    json_schema:
      type: number
      minimum: 0
    value: 6.5
  - handle: model
    json_schema:
      ui:options:
        title: Model
      ui:widget: llm::model
    value:
      model: oomol-chat
      temperature: 0
      top_p: 0.5
      max_tokens: 4096
outputs_def:
  - handle: translated_file
    description: Translated EPUB file path.
    json_schema:
      type: string
      ui:widget: save
      ui:options:
        filters:
          - name: EPUB
            extensions:
              - .epub
title: Translate a book
description: Use LLM to translate epub ebooks. The translated book will retain
  the original text and list the translation side by side with the original
  text.
